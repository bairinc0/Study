Нужна максимальная гибкость:
- Возможность создать экземпляр MallardDuck 
и инициализировать его конкретным способом
полёта (типом поведения fly()).
- Динамически изменять поведение!

Аспекты поведения:
Полёты (FlyBehavior)
Кряканье (QuackBehavior)

Принцип проектирования №2
Программируйте не на уровне реализации, а на уровне интерфейсов.

Решение:
1. Для каждого аспекта поведения создадим соответствующий интерфейс
(FlyBehavior,QuackBehavior).
2. Создадим СПЕЦИАЛЬНЫЕ классы реализующие интерфейсы
(например конкретные способы полёта). 
3. Будем использовать их в классах Duck.